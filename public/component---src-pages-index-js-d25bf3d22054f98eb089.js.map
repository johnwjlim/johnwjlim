{"version":3,"sources":["webpack:///./src/components/home/nimbus-thumbnail.jsx","webpack:///./src/components/home/nimbus-thumbnail-new.jsx","webpack:///./src/components/home/g-thumbnail.jsx","webpack:///./src/components/home/pool-thumbnail.jsx","webpack:///./src/pages/index.js"],"names":["styled","Link","h3","ImageWrapper","div","h1","CaseCaption","CaseLink","Filler","ImageCaption","ImageParent","Nimbus","data","useState","show","set","transitions","useTransition","from","opacity","height","enter","leave","to","onMouseEnter","onMouseLeave","fluid","HeroImage","childImageSharp","map","item","key","props","style","GThumbnail","Wrapper","Body","Container","TitleBox","Title","Subtitle","IndexPage","menuState","useSelector","state","title"],"mappings":"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","file":"component---src-pages-index-js-d25bf3d22054f98eb089.js","sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { useSelector, useDispatch } from 'react-redux'\nimport Img from \"gatsby-image\"\nimport {useTransition, animated} from 'react-spring'\n\nimport { Container, OffsetBody,  ImageWrapper, TextQuote, sections, SmallWidth, LargeWidth } from \"../constants\"\n\nconst CaseLink = styled(Link)`\n  text-decoration: none;\n  transition: 0.2s;\n\n  :hover {\n    cursor: pointer;\n    transform: scale(0.8);\n  }\n`;\n\nconst CaseCaption = styled.h3`\n  // font-weight: 500;\n  color: #333333;\n  margin-top: 1rem;\n  // letter-spacing: -0.3px;\n`\n\nconst ScaledImage = styled(ImageWrapper)`\n  // transition: transform 0.2s;\n  position: relative;\n\n  :hover {\n    // transform: scale(1.03)\n  }\n`\n\n// const Title = styled.h3`\n//   color: #333333;\n\n//   @media (max-width: 768px) {\n//     font-size: 0.9rem;\n//   }\n// `\n\n// const Subtitle = styled(Title)`\n//   font-weight: 400;\n//   color: #767676;\n//   margin-bottom: 0.5rem;\n// `\n\nconst Filler = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: #47C3A0;\n  opacity: 0.6;\n`\n\nconst ImageCaption = styled.h1`\n  position: absolute;\n  color: #ffffff;\n  bottom: 4vh;\n  left: 6vh;\n  max-width: 36rem;\n  letter-spacing: -0.3px;\n\n  @media (max-width: 1024px) {\n    font-size: 1.5rem;\n    max-width: 20rem;\n  }\n`\n\n\nexport default function Nimbus() {\n  const data = useStaticQuery(graphql`\n    query {\n      HeroImage: file(relativePath: { eq: \"Hero.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 3200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      Alternate: file(relativePath: { eq: \"nimbus-thumbnail-alternate.png\"}) {\n        childImageSharp {\n          fluid (maxWidth: 3200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  const [hover, setHover] = useState(false)\n  const transitions = useTransition(hover, null, {\n    from: { opacity: 0, height: 0 },\n    enter: { opacity: 1, height: 'auto'},\n    leave: { opacity: 0, height: 0 },\n    // config: {tension: 200}\n  })\n\n  return (\n    <CaseLink \n      to=\"/nimbus/\"\n      // onMouseEnter={() => setHover(true)}\n      // onMouseLeave={() => setHover(false)}\n    >\n      {/* <ScaledImage>\n        <Img fluid={data.HeroImage.childImageSharp.fluid} />\n      </ScaledImage> */}\n      <ScaledImage\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n      >\n      {/* {\n        transitions.map(({item, key, props}) => item ?\n        <animated.div style={props}>\n          <Img fluid={data.Alternate.childImageSharp.fluid} />\n          <Filler/>\n          <ImageCaption>How do you expand access to the outdoors for the increasingly interconnected society of today</ImageCaption>\n        </animated.div> :\n        <animated.div style={props}>\n          <Img fluid={data.HeroImage.childImageSharp.fluid} />\n        </animated.div>\n        )\n      } */}\n        <Img fluid={data.HeroImage.childImageSharp.fluid} />\n        <Filler />\n      </ScaledImage>\n      <CaseCaption>\n        Nimbus: A mobile app design that aims to redefine access to the outdoors.\n      </CaseCaption>\n    </CaseLink>\n  )\n}","import React, {useState} from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport Img from \"gatsby-image\"\nimport {useTransition, animated} from 'react-spring'\n\nimport { ImageWrapper } from \"../constants\"\n\nconst CaseCaption = styled.h3`\n  // font-size: 1.4rem;\n  font-weight: 400;\n  color: #333333;\n  margin-top: 1rem;\n  letter-spacing: -0.2px;\n\n  @media (max-width: 1024px) {\n    color: #333333;\n    // font-weight: 500;\n    font-size: 0.9rem;\n  }\n`\n\nconst CaseLink = styled(Link)`\n  text-decoration: none;\n  transition: 0.3s;\n  margin: 5rem 0;\n  display: block;\n\n  :hover {\n    cursor: pointer;\n    transform: scale(0.98);\n  }\n\n  &:hover ${CaseCaption} {\n    font-weight: 500;\n    letter-spacing: -0.41px;\n  }\n\n  @media (max-width: 1024px) {\n    margin: 3.5rem 0;\n  }\n\n  // @media (max-width: 768px) {\n  //   &:hover ${CaseCaption} {\n  //     font-weight: 500;\n  //     letter-spacing: -0.5px;\n  //   }\n  // }\n`;\n\nconst Filler = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: #47C3A0;\n  // background-color: #e8e8e8;\n  // background-color: #f5f5f5;\n  // background-color: #F6FFFA;\n  opacity: 0.9;\n`\n\nconst ImageCaption = styled.h1`\n  position: absolute;\n  color: #ffffff;\n  // color: #333333;\n  // color: #47c3a0;\n  bottom: 3vh;\n  left: 6vh;\n  max-width: 36rem;\n  // letter-spacing: -0.8px;\n  // font-weight: 700;\n  // font-size: 1.8rem;\n\n  @media (max-width: 1024px) {\n    font-size: 1.5rem;\n    max-width: 20rem;\n  }\n`\n\nconst ImageParent = styled(ImageWrapper)`\n  position: relative;\n`\n\nexport default function Nimbus() {\n  const data = useStaticQuery(graphql`\n    query {\n      HeroImage: file(relativePath: { eq: \"Hero.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 3200, maxHeight: 1600) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  const [show, set] = useState(false)\n  const transitions = useTransition(show, null, {\n    from: { opacity: 0, height: 0 },\n    enter: { opacity: 1, height: 'auto'},\n    leave: { opacity: 0, height: 0 },\n  })\n\n  return (\n    <CaseLink\n      to=\"/nimbus/\"\n    >\n      <ImageParent\n        onMouseEnter={() => set(true)}\n        onMouseLeave={() => set(false)}\n      >\n        <Img fluid={data.HeroImage.childImageSharp.fluid} />\n        {\n          transitions.map(({item, key, props}) => \n            item && <animated.div key={key} style={props}>\n              <Filler />\n              <ImageCaption>How do you expand access to the outdoors for the increasingly interconnected society of today?</ImageCaption>\n              {/* <ImageCaption>Nimbus: A mobile app design that aims to expand access to the outdoors</ImageCaption> */}\n              {/* <ImageCaption>\n                HOW DO YOU EXPAND ACCESS TO THE OUTDOORS FOR THE INCREASINGLY INTERCONNECTED SOCIETY OF TODAY\n              </ImageCaption> */}\n            </animated.div>\n          )\n        }\n      </ImageParent>\n      <CaseCaption>\n        Nimbus: A mobile app design that aims to redefine access to the outdoors.\n        {/* How do you expand access to the outdoors for the increasingly interconnected society of today? */}\n      </CaseCaption>\n    </CaseLink>\n  )\n}\n","import React, {useState} from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport Img from \"gatsby-image\"\nimport {useTransition, animated} from 'react-spring'\n\nimport { ImageWrapper } from \"../constants\"\n\nconst CaseCaption = styled.h3`\n  font-weight: 400;\n  color: #333333;\n  margin-top: 1rem;\n  letter-spacing: -0.2px;\n\n  @media (max-width: 1024px) {\n    color: #333333;\n    // font-weight: 500;\n    font-size: 0.9rem;\n  }\n`\n\nconst CaseLink = styled(Link)`\n  text-decoration: none;\n  transition: 0.3s;\n  margin: 5rem 0;\n  margin-bottom: 0;\n  display: block;\n\n  :hover {\n    cursor: pointer;\n    transform: scale(0.98);\n  }\n\n  &:hover ${CaseCaption} {\n    font-weight: 500;\n    letter-spacing: -0.41px;\n    color: #333333;\n  }\n\n  @media (max-width: 1024px) {\n    margin: 3.5rem 0;\n    margin-bottom: 0;\n  }\n\n  @media (max-width: 768px) {\n    &:hover ${CaseCaption} {\n      font-weight: 500;\n      letter-spacing: -0.5px;\n    }\n  }\n`;\n\nconst Filler = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  // background-color: #47C3A0;\n  background-color: #FF6699;\n  // background-color: #ffffff;\n  opacity: 0.8;\n`\n\nconst ImageCaption = styled.h1`\n  position: absolute;\n  color: #ffffff;\n  // color: #ff6699;\n  bottom: 3vh;\n  left: 6vh;\n  max-width: 36rem;\n  // letter-spacing: -0.5px;\n  // font-weight: 900;\n\n  @media (max-width: 1024px) {\n    font-size: 1.5rem;\n    max-width: 20rem;\n  }\n`\n\nconst ImageParent = styled(ImageWrapper)`\n  position: relative;\n`\n\nexport default function GThumbnail() {\n  const data = useStaticQuery(graphql`\n    query {\n      HeroImage: file(relativePath: {eq: \"g-hero-image.png\"}) {\n        childImageSharp {\n          fluid (maxWidth: 3200, maxHeight: 1600) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  const [show, set] = useState(false)\n  const transitions = useTransition(show, null, {\n    from: { opacity: 0, height: 0 },\n    enter: { opacity: 1, height: 'auto'},\n    leave: { opacity: 0, height: 0 },\n  })\n\n  return (\n    <CaseLink\n      to=\"/g-challenge/\"\n    >\n      <ImageParent\n        onMouseEnter={() => set(true)}\n        onMouseLeave={() => set(false)}\n      >\n        <Img fluid={data.HeroImage.childImageSharp.fluid} />\n        {\n          transitions.map(({item, key, props}) => \n            item && <animated.div key={key} style={props}>\n              <Filler />\n              <ImageCaption>How do you help new students find and sustain connections in a new school and social environment?</ImageCaption>\n            </animated.div>\n          )\n        }\n      </ImageParent>\n      <CaseCaption>\n        ClubFinder: Helping new students find a right fit amongst hundreds of campus organizations\n      </CaseCaption>\n    </CaseLink>\n  )\n\n}\n\n","import React, {useState} from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport Img from \"gatsby-image\"\nimport {useTransition, animated} from 'react-spring'\n\nimport { ImageWrapper } from \"../constants\"\n\nconst CaseCaption = styled.h3`\n  font-weight: 400;\n  color: #333333;\n  margin-top: 1rem;\n  letter-spacing: -0.2px;\n\n  @media (max-width: 1024px) {\n    color: #333333;\n    // font-weight: 500;\n    font-size: 0.9rem;\n  }\n`\n\nconst CaseLink = styled(Link)`\n  text-decoration: none;\n  transition: 0.3s;\n  margin: 5rem 0;\n  margin-bottom: 0;\n  display: block;\n\n  :hover {\n    cursor: pointer;\n    transform: scale(0.98);\n  }\n\n  &:hover ${CaseCaption} {\n    font-weight: 500;\n    letter-spacing: -0.41px;\n    color: #333333;\n  }\n\n  @media (max-width: 1024px) {\n    margin: 3.5rem 0;\n    margin-bottom: 0;\n  }\n\n  @media (max-width: 768px) {\n    &:hover ${CaseCaption} {\n      font-weight: 500;\n      letter-spacing: -0.5px;\n    }\n  }\n`;\n\nconst Filler = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  // background-color: #47C3A0;\n  background-color: #FF6699;\n  // background-color: #ffffff;\n  background-color: #F0AC83;\n  background-color: #FFB169;\n  opacity: 0.95;\n`\n\nconst ImageCaption = styled.h1`\n  position: absolute;\n  color: #ffffff;\n  // color: #ff6699;\n  bottom: 3vh;\n  left: 6vh;\n  max-width: 36rem;\n  // letter-spacing: -0.5px;\n  // font-weight: 900;\n\n  @media (max-width: 1024px) {\n    font-size: 1.5rem;\n    max-width: 20rem;\n  }\n`\n\nconst ImageParent = styled(ImageWrapper)`\n  position: relative;\n`\n\nexport default function GThumbnail() {\n  const data = useStaticQuery(graphql`\n    query {\n      HeroImage: file(relativePath: {eq: \"pool-thumbnail.png\"}) {\n        childImageSharp {\n          fluid (maxWidth: 3200, maxHeight: 1600) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  const [show, set] = useState(false)\n  const transitions = useTransition(show, null, {\n    from: { opacity: 0, height: 0 },\n    enter: { opacity: 1, height: 'auto'},\n    leave: { opacity: 0, height: 0 },\n  })\n\n  return (\n    <CaseLink\n      to=\"/pool/\"\n    >\n      <ImageParent\n        onMouseEnter={() => set(true)}\n        onMouseLeave={() => set(false)}\n      >\n        <Img fluid={data.HeroImage.childImageSharp.fluid} />\n        {\n          transitions.map(({item, key, props}) => \n            item && <animated.div key={key} style={props}>\n              <Filler />\n              {/* <ImageCaption>How do you empower control over our water and energy consumption in a unique and engaging manner?</ImageCaption> */}\n              <ImageCaption>How do you reimagine household utilities tracking with the technologies of tommorow?</ImageCaption>\n            </animated.div>\n          )\n        }\n      </ImageParent>\n      <CaseCaption>\n        POOL: A mixed reality experience that aims to visualize household energy and water usage in order to encourage responsible consumption.\n      </CaseCaption>\n    </CaseLink>\n  )\n\n}\n\n","import React, {useEffect} from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { useSelector, useDispatch } from 'react-redux'\nimport Img from \"gatsby-image\"\nimport {useTransition, animated} from 'react-spring'\n\nimport { Container, OffsetBody,  ImageWrapper, TextQuote, sections, SmallWidth, LargeWidth } from \"../components/constants\"\n\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\nimport Header from \"../components/header\"\nimport MobileNav from \"../components/mobile-nav\"\nimport Nav from \"../components/nav\"\n\nimport Nimbus from \"../components/home/nimbus-thumbnail\"\nimport New from \"../components/home/nimbus-thumbnail-new\"\nimport GChallenge from \"../components/home/g-thumbnail\"\nimport Pool from \"../components/home/pool-thumbnail\"\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 76px;\n`;\n\nconst Body = styled(Container)`\n  // width: 100%;\n  margin: 0 3vw;\n  margin-right: 15em;\n\n  @media (max-width: 1240px) {\n    margin: 0;\n  }\n`;\n\nconst TitleBox = styled.div`\n  // margin: 3.5rem 0;\n  margin: 2.5rem 0 5rem;\n`\n\nconst Title = styled.h3`\n  color: #333333;\n\n  @media (max-width: 768px) {\n    font-size: 1rem;\n  }\n`\n\nconst Subtitle = styled(Title)`\n  // font-size: 1.1rem;\n  font-weight: 400;\n  color: #666666;\n  // color: #333333;\n  margin-bottom: 0.5rem;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst MobileSubtitle = styled(Subtitle)`\n  @media (max-width: 768px) {\n    display: block;\n  }\n`\n\nconst CaseLink = styled(Link)`\n  text-decoration: none;\n  transition: 0.2s;\n\n  :hover {\n    cursor: pointer;\n    transform: scale(0.8);\n  }\n`;\n\nconst CaseCaption = styled.h3`\n  // font-weight: 400;\n  color: #333333;\n  margin-top: 1rem;\n  // letter-spacing: -0.3px;\n`\n\nconst ScaledImage = styled(ImageWrapper)`\ntransition: transform 0.2s;\n\n:hover {\n  transform: scale(1.03)\n}\n`\n\n\nexport default function IndexPage() {\n  const data = useStaticQuery(graphql`\n    query {\n      HeroImage: file(relativePath: { eq: \"Hero.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 3200, maxHeight: 1600) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n  // const dispatch = useDispatch()\n  const menuState = useSelector(state => state.menuState)\n\n  // useEffect(() => {\n  //   dispatch({type: \"CLOSE\"})\n  // },[])\n\n  // function handleTabSwitch(value) {\n  //   setActive(value);\n  // }\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <Header/>\n      {\n        menuState ?\n        <MobileNav /> :\n        <>\n          <Wrapper>\n            <Body>\n              <TitleBox>\n                <Subtitle>I'm a student studying Human Computer Interaction and Political Science at the University of Washington.</Subtitle>\n                {/* <MobileSubtitle>Student of Human Computer Interaction at the University of Washington.</MobileSubtitle> */}\n                {/* <Subtitle>I'm an avid skier, amateur runner and I make little rectangles on a screen from time to time.</Subtitle> */}\n                <Title>I'm a designer that codes driven by impact and seeking the intersection between technology and humanity.</Title>\n\n              </TitleBox>\n              {/* <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n                <Image />\n              </div> */}\n              {/* <Nimbus /> */}\n              <New />\n              <Pool />\n              <GChallenge />\n            </Body>\n            <Nav />\n          </Wrapper>\n        </>\n      }\n  </Layout>\n  )\n}\n"],"sourceRoot":""}