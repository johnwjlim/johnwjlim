{"version":3,"sources":["webpack:///./src/components/nav.jsx","webpack:///./src/components/constants.js","webpack:///./src/components/nimbus/showcase.jsx","webpack:///./src/components/nimbus/survey-ideation.jsx","webpack:///./src/components/nimbus/flows-wireframes.jsx","webpack:///./src/components/nimbus/high-fidelity.jsx","webpack:///./src/components/nimbus/redesign.jsx","webpack:///./src/components/nimbus/personal-thoughts.jsx","webpack:///./src/pages/nimbus.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./src/components/old-header.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.jsx","webpack:///./src/components/mobile-nav.jsx"],"names":["Container","styled","nav","withConfig","displayName","componentId","List","ul","ListItem","li","StyledLink","Link","StyledText","a","GreyText","p","Nav","props","_useState","useState","components","sections","react_default","createElement","to","map","section","index","active","key","onClick","onChange","style","margin","lineHeight","handleComponents","div","IntroBody","OffsetBody","TextBlock","RightButton","button","LeftButton","ButtonHeader","h6","ButtonText","h4","ImageWrapper","FlexWrapper","TextQuote","blockquote","InfoPanel","PrototypeSection","PrototypeWrapper","PrototypeText","ImageWithMargin","Showcase","data","_4082226175","Fragment","constants_Container","gatsby_image_default","fluid","HeroImage","childImageSharp","Deck","Grid","src","transform","width","height","allowTransparency","frameborder","ProfileMontage","RevisedScreens","LargeWidth","SmallWidth","SurveyIdeation","_415606462","Mockup","SmallMockup","SketchGrid","SketchGridMobile","SketchesAll","Solution","_1494456882","Join","marginTop","Create","StyledList","Iteration","_3546553910","high_fidelity_ListItem","Home","high_fidelity_ImageWithMargin","Listing","Trips","Profile","ProfileDetail","Redesign","_1068994244","ScreenDeck","TripCrit","redesign_ImageWithMargin","RevisedTripCrit","LocationCrit","TrailSign","PersonalThoughts","personal_thoughts_Container","__webpack_require__","d","__webpack_exports__","Nimbus","Wrapper","setActive","menuState","useSelector","state","useDispatch","handleTabSwitch","value","layout","seo","title","header","pageTitle","mobile_nav","renderActiveSection","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","m","module","exports","require","default","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Header","siteTitle","propTypes","PropTypes","string","Layout","children","_856328897","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","styled_components__WEBPACK_IMPORTED_MODULE_1__","gatsby__WEBPACK_IMPORTED_MODULE_2__","react_redux__WEBPACK_IMPORTED_MODULE_3__","react_spring__WEBPACK_IMPORTED_MODULE_4__","Title","h2","SecondaryTitle","Subtitle","Filler","Menu","hover","setHover","dispatch","transitions","useTransition","from","opacity","enter","leave","config","tension","useEffect","type","onMouseEnter","onMouseLeave","item","gatsby__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_2__","handleClick"],"mappings":"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","file":"component---src-pages-nimbus-jsx-8ff22250a41d0711204b.js","sourcesContent":["import React, { useState } from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nconst Container = styled.nav`\n  width: 15em;\n  @media (max-width: 768px) {\n    display: none; \n  }\n`\n\nconst List = styled.ul`\n  list-style: none;\n  margin-bottom: 3.5rem;\n`\nconst ListItem = styled.li`\n`;\n\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  font-size: 1rem;\n  line-height: 1.7;\n  transition: 0.2s;\n\n  :hover {\n    // text-decoration: underline;\n    color: #ffb7b7;\n  }\n`\n\nconst StyledText = styled.a`\n  line-height: 1.7;\n  color: #111111;\n  margin: 0;\n  font-weight: 500;\n\n  :hover {\n    // text-decoration: underline;\n    // cursor: pointer;  \n  }   \n`\n\nconst GreyText = styled(StyledText)`\n  color: #767676;\n  font-weight: 400;\n  transition: 0.2s;\n\n  :hover {\n    color: #ffb7b7;\n    cursor: pointer;  \n  }  \n`\n\nconst DetailText = styled.p`\n  color: #767676;\n  margin-bottom: 3.5rem;\n  line-height: 1.5;\n\n  @media (max-width: 768px) {\n    display: none\n  }\n\n`\n\nexport default function Nav(props) {\n  const [sections, setSections] = useState(props.components)\n\n\n  function handleComponents() {\n    if (sections) {\n      return sections.map((section, index) => {\n        if (index === props.active) {\n          return (\n            <ListItem key={index} onClick={() => props.onChange(index)}>\n              <StyledText>{sections[index]}</StyledText>\n            </ListItem>\n          )\n        } else {\n          return (\n            <ListItem key={index} onClick={() => props.onChange(index)}>\n              <GreyText style={{margin: \"0\", lineHeight: \"1.7\"}}>{sections[index]}</GreyText>\n            </ListItem>\n          )\n        }\n      })\n    }\n  }\n\n  return (\n    <Container>\n      <List>\n        <ListItem>\n          <StyledLink to=\"/\">Home</StyledLink>\n        </ListItem>\n        <ListItem>\n          <StyledLink to=\"/\">About</StyledLink>\n        </ListItem>\n        <ListItem>\n          <StyledLink to=\"/\">Resume</StyledLink>\n        </ListItem>\n      </List>\n \n      <List>\n        {/* <DetailText>Nimbus <br/> Mobile App Design</DetailText> */}\n        {\n          handleComponents()\n        }\n      </List>\n    </Container>\n  )\n}","import styled from \"styled-components\"\n\nexport const sections = [\"Overview\", \"Survey and Ideation\", \"Flows + Wireframes\", \"High Fidelity Screens\", \"Redesign\", \"End Notes\"]\n\nexport const Container = styled.div`\n  max-width: 1300px;\n  width: 90%;\n  overflow: scroll;\n  height: 89vh;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`\n\nexport const IntroBody = styled.div`\n  display: block;\n  margin: 7.5rem 0;\n\n  @media (max-width: 1240px) {\n    margin: 3.5rem 0;\n  }\n`\n\nexport const OffsetBody = styled(IntroBody)`\n  padding-left: 18vw;\n\n  @media (max-width: 1240px) {\n    padding: 0;\n  }\n`\n\nexport const TextBlock = styled.div`\n  max-width: 36rem;\n  margin-bottom: 2rem;\n`\n\nexport const RightButton = styled.button`\n  float: right;  \n\n  background: none;\n  border: none;\n  text-align: right;\n  max-width: 38vw;\n\n  :hover {\n    cursor: pointer;  \n  }\n\n\n  @media (max-width: 425px) {\n    transform: scale(0.75);\n  }\n`\n\nexport const LeftButton = styled(RightButton)`\n  float: left;\n  text-align: left;\n`\nexport const ButtonHeader = styled.h6`\n  font-weight: 500;\n  margin-bottom: 0.5rem;\n  color: #767676;\n`\n\nexport const ButtonText = styled.h4`\n  margin: 0;\n\n  button & :hover {\n    text-decoration: underline\n  }\n`\n\nexport const ImageWrapper = styled.div`\n  width: 100%;\n  margin: 0 auto;\n`\nexport const FlexWrapper = styled.div`\n  display: flex;\n\n  @media (max-width: 1240px) {\n    display: block;\n  }\n`\n\nexport const TextQuote = styled.blockquote`\n  margin: 0;\n  font-size: 1.5rem;\n  font-weight: 600; \n  max-width: 36rem;\n  border-left: solid 3px #333333;\n  padding-left: 2rem;\n  margin: 5rem 0;\n\n  @media (max-width: 1240px) {\n    margin: 3.5rem 0;\n  }\n\n  @media (max-width: 1024px) {\n    font-size: 1.25rem;\n  }\n\n  @media (max-width: 425px) {\n    font-size: 1.2rem;\n    padding-left: 1.5rem;\n    font-size: 1rem;\n  }\n`;\n\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport { Container, ImageWrapper, FlexWrapper, IntroBody, OffsetBody, TextBlock, RightButton, ButtonHeader, ButtonText, sections, Image } from \"../constants\"\n\nconst InfoPanel = styled.div`\n  width: 18vw;\n  margin: 7.5rem 0;\n\n  @media (max-width: 1240px) {\n    width: 100%;\n    margin: 3.5rem 0;\n  }\n`\n\nconst PrototypeSection = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media (max-width: 1240px) {\n    display: block;\n  }\n`\n\nconst PrototypeWrapper = styled.div`\n  margin: 0 6rem;\n\n  @media (max-width: 768px) {\n    margin: 0;\n  }\n`\n\nconst PrototypeText = styled(TextBlock)`\n  max-width: 28rem;\n\n  @media (max-width: 1240px) {\n    max-width: 34rem;\n  }\n`\nconst ImageWithMargin = styled(ImageWrapper)`\n  margin-top: 3.5rem;\n`\n\nexport default function Showcase(props) {\n  const data = useStaticQuery(graphql`\n    query {\n      HeroImage: file(relativePath: { eq: \"Hero.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 3200, maxHeight: 1600) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      Deck: file(relativePath: { eq: \"screen-deck-new.png\"}) {\n        childImageSharp {\n          fluid(maxWidth: 3200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      Grid: file(relativePath: {eq: \"image-grid.png\"}) {\n        childImageSharp {\n          fluid(maxWidth: 3200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      PhotoGrid: file(relativePath: {eq: \"photo-grid.png\"}) {\n        childImageSharp {\n          fluid(maxWidth: 3200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      PaperPrototype: file(relativePath: {eq: \"paper-prototype.png\"}) {\n        childImageSharp {\n          fluid(maxWidth: 3200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      Cutout: file(relativePath: {eq: \"high-fi-cutout.png\"}) {\n        childImageSharp {\n          fluid(maxWidth: 3200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      ProfileMontage: file(relativePath: {eq: \"profile-montage.png\"}) {\n        childImageSharp {\n          fluid(maxWidth: 3200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      RevisedScreens: file(relativePath: {eq: \"revised-screen-deck-copy.png\"}) {\n        childImageSharp {\n          fluid (maxWidth: 3200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Container>\n        <ImageWrapper>\n          <Img fluid={data.HeroImage.childImageSharp.fluid} />\n        </ImageWrapper>\n        <FlexWrapper>\n          <InfoPanel>\n            <h1>Nimbus</h1>\n            <p>Case Study <br/>Mobile App Design</p>\n          </InfoPanel>\n          <IntroBody>\n            <TextBlock>\n              <p>\n                The year is 2018. National Park visits in the United States have topped 200 million and social media usage among young Americans are at an all time high. While our public lands are purportedly free and open to all, the sheer remoteness of many of our favorite outdoor locations  means that access is often limited to the few who have cars or those whose friends or family share a similar passion for the outdoors.\n              </p>\n            </TextBlock>\n            <TextBlock>\n              <p>\n                Recognizing that the lack of transportation options as a major obstacle that hampers access to the outdoors, we set out to design a mobile experience that would solve the transportation conundrum by connecting outdoor enthusiasts with like-minded peers and have them carpool to outdoor destinations. In doing so, we also sought to alleviate the pain points of organizing such activities and foster a community of outdoor enthusiasts by encouraging them to partake in outdoor experiences collectively.\n              </p>\n            </TextBlock>\n          </IntroBody>\n        </FlexWrapper>\n        <ImageWrapper>\n          <Img fluid={data.Deck.childImageSharp.fluid}/>\n        </ImageWrapper>\n        <OffsetBody>\n          <TextBlock>\n            <p>\n              Our solution was centered around having users join or create groups headed to outdoor destinations that they had in mind. User safety immediately came up as the number one concern that our professor and mentor, Brian Fling, had for our proposed concept. His concerns were most certainly justified; We were after all, proposing to put strangers together in a car and have them drive out to the middle of nowhere. It was in effect akin to a more extreme version of a blind date. \n            </p>\n          </TextBlock>\n          <TextBlock>\n            <p>\n            In response, we were proactive in including mitigating features that we hoped would reassure users such as having public user profiles as well as mandatory user verification. \n            Yet multiple rounds of testing and iteration revealed that much of our target users were essentially less concerned for their own safety than we as designers were. They were basically more or less comfortable with the idea of adventuring with total strangers.  It was almost as if that the age old adage of not getting into cars with strangers was somehow less applicable in the 21st century. This surprising takeaway would be key towards underscoring the feasibility of our proposed concept. \n            </p>\n          </TextBlock>\n        </OffsetBody>\n        <ImageWrapper>\n          <Img fluid={data.Grid.childImageSharp.fluid}/>\n        </ImageWrapper>\n        <PrototypeSection>\n          <PrototypeWrapper>\n            <iframe src=\"https://marvelapp.com/3f9161c?emb=1&iosapp=false&frameless=false\" style={{transform: \"scale(0.6)\"}} width=\"452\" height=\"901\" allowTransparency=\"true\" frameborder=\"0\"></iframe>\n          </PrototypeWrapper>\n          <IntroBody>\n              {/* <h3>Interactive Prototype</h3>  */}\n              <PrototypeText>\n                <p>We built various interactive prototypes to test the usability of the flows and designs we had in mind, and this prototype was one with which we conducting our third round of user testings with. While rudimentary, it served as an effective tool for us to conduct user testing and was instrumental towards identifying usability failures and potential pain points.  </p>\n              </PrototypeText>\n              <PrototypeText>\n                <p>The use goal that we set out for our testers with this prototype was to create a group travelling to hike a popular local trail known as Mailbox Peak.</p>\n              </PrototypeText>\n          </IntroBody>\n        </PrototypeSection>\n        <ImageWrapper>\n          <Img fluid={data.ProfileMontage.childImageSharp.fluid} />\n        </ImageWrapper>\n        <ImageWithMargin>\n          <Img fluid={data.RevisedScreens.childImageSharp.fluid} />\n        </ImageWithMargin>\n        <OffsetBody>\n          <TextBlock>\n            <p>\n              There was never really a big aha moment that led to us arriving at our solution in its present form. Instead, it came about as a result of multiple evolutions of prototyping and testing as we strove to incorporate user feedback as much as possible at every stage.\n              This user-centered approach not only allowed us to better incorporate testing feedback, but also yielded surprising takeaways and insights about user behavior that allowed us greater freedom to evolve the design in ways that nobody anticipated from the start.\n            </p>\n          </TextBlock>\n          <TextBlock>\n            <p>\n              This project was conducted over multiple sprints with a round of user testing at the end of each sprint to validate ideas and garner feedback from prospective users. I've broken up this case study into multiple sections with each section roughly corresponding to a sprint cycle that we worked.   \n            </p>\n          </TextBlock>\n        </OffsetBody>\n        <RightButton onClick={() => props.onChange(props.active + 1)}>\n          <ButtonHeader>NEXT SECTION</ButtonHeader>\n          <ButtonText>{sections[props.active + 1]}</ButtonText>\n        </RightButton>\n      </Container>\n    </>\n  )\n}   ","import React from \"react\"\nimport styled from \"styled-components\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport MediaQuery from 'react-responsive';\n\nimport { Container, OffsetBody, TextBlock, RightButton, LeftButton, ButtonHeader, ButtonText, ImageWrapper, TextQuote, sections } from \"../constants\"\n// import * as common from \"../constants\"\n\nconst LargeWidth = styled(ImageWrapper)`\n  display: block;\n  \n  @media (max-width: 1024px) {\n    display: none;\n  }\n`\n\nconst SmallWidth = styled(ImageWrapper)`\n  display: none;\n  \n  @media (max-width: 1024px) {\n    display: block;\n  }\n`\n\nexport default function SurveyIdeation(props) {\n  const data = useStaticQuery(graphql`\n    query {\n      SketchesAll: file(relativePath: { eq: \"sketches-all.png\"}) {\n        childImageSharp {\n          fluid(maxWidth: 3200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      Sketches1: file(relativePath: { eq: \"sketches-1.png\"}) {\n        childImageSharp {\n          fluid(maxWidth: 3200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      Sketches2: file(relativePath: { eq: \"sketches-2.png\"}) {\n        childImageSharp {\n          fluid(maxWidth: 3200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      SketchGrid: file(relativePath: {eq: \"sketch-grid.png\"}) {\n        childImageSharp {\n          fluid(maxWidth: 3200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      SketchGridMobile: file(relativePath: {eq: \"sketch-grid-mobile.png\"}) {\n        childImageSharp {\n          fluid (maxWidth: 3200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      Mockup: file(relativePath: { eq: \"hero-secondary.png\"}) {\n        childImageSharp {\n          fluid(maxWidth: 3200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      SmallMockup: file(relativePath: {eq: \"mockup.png\"}) {\n        childImageSharp {\n          fluid(maxWidth: 2400) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Container>\n      <LargeWidth>\n        <Img fluid={data.Mockup.childImageSharp.fluid} />\n      </LargeWidth>\n      <SmallWidth>\n        <Img fluid={data.SmallMockup.childImageSharp.fluid} />\n      </SmallWidth>\n      <OffsetBody>\n        <p><strong>Exploring The Problem.</strong></p>\n        <TextBlock>\n          <p>\n            We started work on the project right around the middle of ski season. The Cascade Mountain Range just outside of Seattle was having a bumper snow year and as an avid skier myself, the only thing I was really interested in talking about at that time of year was how great the skiing was and how everybody should join me for a couple of laps out on the slopes. \n          </p>\n        </TextBlock>\n        <TextBlock>\n          <p>\n            I was hence slightly disappointed to find out that there was only one other skier besides myself in the group. Yet my disappointment was quickly outweighed by a curious revelation; <strong> while there was unanimous consensus that Seattle was home to some of the finest outdoor recreation in the world, we were all surprised to discover how few of us were actual participants in outdoor activities. </strong> While there were a variety of reasons cited for the lack of outdoor participation, the greatest factor appeared to be the lack of transportation options to outdoor areas; many of the best outdoor areas were simply inaccessible without a car or in some cases, an off-road capable vehicle.\n          </p>\n        </TextBlock>\n        <TextQuote>\n          \"The issue of safety emerged as a stumbling block with a majority of survey respondents indicating that they would be uncomfortable travelling with strangers to outdoor destinations.\"  \n        </TextQuote>\n        <TextBlock>\n          <p>\n            Further anecdotal evidence from our friends as well as our professor, Brian Fling, suggested that this problem was not just limited to the members within our group but was in fact, potentially part of a larger trend that was occuring in our society.\n          </p>\n        </TextBlock>\n        <TextBlock>\n         <p>\n         We put out an initial survey to validate our hypothesis and better understand the problem that we were facing. Our survey responses were mostly positive, with most respondents stating that it was challenging to get to outdoor recreation areas. However, the issue of safety came up as a stumbling block with a majority of respondents indicating that they would be uncomfortable riding on vehicles with strangers to outdoor destinations. \n         </p>\n        </TextBlock>\n      </OffsetBody>\n      {/* <ImageWrapper style={{marginBottom: \"5rem\"}}>\n        <Img fluid={data.SketchGrid.childImageSharp.fluid}/>\n      </ImageWrapper> */}\n      <LargeWidth>\n        <Img fluid={data.SketchGrid.childImageSharp.fluid} />\n      </LargeWidth>\n      <SmallWidth>\n        <Img fluid={data.SketchGridMobile.childImageSharp.fluid} />\n      </SmallWidth>\n      <OffsetBody>\n        <TextBlock>\n          <p>\n          The goal with our first iterations was therefore to find ways to make our users comfortable when sharing a ride with other users of our app. We thought of introducing user profiles within our app to give users the opportunity to gain familiarity with one another and build trust through information provided in their profiles. We decided that the following elements would help ease users’ concerns: a profile picture, a profile description, a “trip history” detailing the past outings users have completed, and photos of past trips.\n          </p>\n        </TextBlock>\n        <TextQuote>\n        \"We thought of introducing user profiles within our app to give users the opportunity to gain familiarity with one another and build trust through information provided in their profiles.\"\n         </TextQuote>\n        <TextBlock>\n          <p>\n          In this sprint, we designed paper prototypes to illustrate four different user types with varying levels of detail in their profiles. For example, one profile we created was one that we expected would garner less trust from users, having a profile picture that does not show a clear view of the person’s face, a very short profile description that does not inform much about the user, and very few trips and photos. On the other end of the spectrum, we also created a user profile that we expected to gain more trust; it had a clear profile picture, an informative profile description, a moderate number of trips, and a lot of photos\n          </p>\n        </TextBlock>\n      </OffsetBody>\n      <ImageWrapper>\n        <Img fluid={data.SketchesAll.childImageSharp.fluid}/>\n      </ImageWrapper>\n      <OffsetBody>\n        <TextBlock>\n          <p>\n          User testing from this sprint was remarkably informative and yielded a wealth of valuable insights that was instrumental in helping us define our feature set. The first key takeaway that we got from our testing was that the inclusion of public user profiles had appeared to have the desired effect of alleviating the safety concerns that many of our survey respondents had previously pointed out. Our test participants appeared to be more concerned about whether they would mesh well with the people they were traveling or whether they would be able to keep up with their travel companions.\n          </p>\n        </TextBlock>\n        <TextBlock>\n          <p>\n          Proximity and commonality also appeared to be major factors affecting comfort levels among participants; our test participants were mostly students from the University of Washington and most of them indicated that they would be a lot more comfortable traveling with a group of UW students that they have never met before as opposed to total strangers coming from a neighboring city. \n           </p>\n        </TextBlock>\n        <TextQuote>\n        \"Our test participants appeared to be more concerned about whether they would mesh well with the people they were traveling or whether they would be able to keep up with their travel companions.\"\n        </TextQuote>\n        <TextBlock>\n          <p>\n          All in all, we were relieved that the user profiles were effective in allaying safety fears among test participants and that safety alone was not a dealbreaker in its own right.\n          </p>\n        </TextBlock>\n      </OffsetBody>\n      <LeftButton onClick={() => props.onChange(props.active -1)}>\n        <ButtonHeader>PREVIOUS SECTION</ButtonHeader>\n        <ButtonText>{sections[props.active - 1]}</ButtonText>\n      </LeftButton>\n      <RightButton onClick={() => props.onChange(props.active + 1)}>\n        <ButtonHeader>NEXT SECTION</ButtonHeader>\n        <ButtonText>{sections[props.active + 1]}</ButtonText>\n      </RightButton>\n    </Container>\n  )\n}","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport { Container, OffsetBody, TextBlock, RightButton, LeftButton, ButtonHeader, ButtonText, ImageWrapper, TextQuote, sections } from \"../constants\"\n\n\nexport default function Solution(props) {\n  const data = useStaticQuery(graphql`\n    query {\n      Join: file(relativePath: { eq: \"join-a-group.png\"}) {\n        childImageSharp {\n          fluid(maxWidth: 3200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      Create: file(relativePath: { eq: \"create-a-group.png\"}) {\n        childImageSharp {\n          fluid(maxWidth: 3200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Container>\n      <OffsetBody>\n        <p><strong>Validating Our Use Cases.</strong></p>\n        <TextBlock>\n          <p>\n          We were pleasantly surprised by the relative lack of concern expressed by our testers on the safety and security aspects of our product in the previous round of testing. Preliminary research and conversations with our professor had suggested that this was a problem that could have potentially threatened the entire viability of our idea. \n          </p>\n        </TextBlock>\n        <TextBlock>\n          <p>\n          It therefore came as a relief to all of us, including our professor, that our testers were a lot more receptive to our concept that initially expected. We speculated that this could be due to testers having seen actual sketches of the app and the idea in action, which could have helped to allay fear and uncertainty. With the additional validation gained from the positive outcomes of our first round of user tests, we were now comfortable with further advancing our idea and moving into testing the key user flows for our app.\n          </p>\n        </TextBlock>\n        <TextQuote>\n        \"Our goal was to test the usability of our product by having users walk through the process of joining a trip to a predetermined location as well as creating a trip to another location.\"\n        </TextQuote>\n        <TextBlock>\n          <p>\n          Our next objective was to design user flows based on anticipated usage scenarios. Our goal was to test the usability of our product by having users walk through the process of joining a trip to a predetermined location as well as creating a trip to another location. We tested our user flows with low fidelity wireframes based on our sketches from the previous sprint. \n          </p>\n        </TextBlock>\n      </OffsetBody>\n      <ImageWrapper>\n        <Img fluid={data.Join.childImageSharp.fluid} />\n      </ImageWrapper>\n      <ImageWrapper style={{marginTop: \"3.5rem\"}}>\n        <Img fluid={data.Create.childImageSharp.fluid} />\n      </ImageWrapper>\n      <OffsetBody>\n        <TextBlock>\n          <p>\n          User testing for this sprint was largely successful as most of our testers were able to successfully navigate through the flows with little to no additional prompting from proctors. We also received feedback on visual aspects of our wireframes; while most of it were relatively minor fixes, there were issues with some screens where testers appeared to be slightly confused about where they were. We attributed the nature of this confusion to the low fidelity nature of our wireframes, which admittedly made some screens too similar to one another. We believe that this issue could be addressed with higher fidelity prototypes.\n          </p>\n        </TextBlock>\n        <TextBlock>\n          <p>\n          Another interesting insight that we discovered while testing our wireframes was how much more efficient it was to test them as compared to paper-based prototypes and sketches. As our wireframes were largely screen-based, we were able to quickly scale them across multiple devices, which allowed us to test them concurrently. This was in contrast to paper prototypes where we could only conduct a single test at a time. \n          </p>\n        </TextBlock>\n      </OffsetBody>\n      <LeftButton onClick={() => props.onChange(props.active -1)}>\n        <ButtonHeader>PREVIOUS SECTION</ButtonHeader>\n        <ButtonText>{sections[props.active - 1]}</ButtonText>\n      </LeftButton>\n      <RightButton onClick={() => props.onChange(props.active + 1)}>\n        <ButtonHeader>NEXT SECTION</ButtonHeader>\n        <ButtonText>{sections[props.active + 1]}</ButtonText>\n      </RightButton>\n    </Container>\n  )\n}","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport { Container, OffsetBody, TextBlock, RightButton, LeftButton, ButtonHeader, ButtonText, ImageWrapper, TextQuote, sections } from \"../constants\"\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\"\n\nconst ListItem = styled.li`\n  line-height: 1.5;\n  font-weight: 500;\n  margin-bottom: 1rem;  \n`\nconst StyledList = styled.ul`\n  margin: 2.5rem 0;\n\n  @media (max-width: 1240px) {\n    padding-left: 1rem;\n  }\n`;\n\nconst ImageWithMargin = styled(ImageWrapper)`\n  margin-top: 3.5rem;\n`\n\nexport default function Iteration(props) {\n  const data = useStaticQuery(graphql`\n    query {\n      Home: file(relativePath: { eq: \"high-fi-1.png\"}) {\n        childImageSharp {\n          fluid(maxWidth: 3200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      Listing: file(relativePath: {eq: \"high-fi-location.png\"}) {\n        childImageSharp {\n          fluid(maxWidth: 3200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      Trips: file(relativePath: {eq: \"high-fi-trips.png\"}) {\n        childImageSharp {\n          fluid(maxWidth: 3200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      Profile: file(relativePath: {eq: \"high-fi-profile.png\"}) {\n        childImageSharp {\n          fluid(maxWidth: 3200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      ProfileDetail: file(relativePath: {eq: \"high-fi-profile-detail.png\"}) {\n        childImageSharp {\n          fluid(maxWidth: 3200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <Container>\n      <OffsetBody>\n        <p><strong>Defining The Feature Set.</strong></p>\n        <TextBlock>\n          <p>\n          At this stage in the project, we’ve established the viability of the concept and validated our two primary use cases. It was now time to spec out the features that we wanted included in our app. Beyond our primary goal of expanding access to the outdoors by connecting outdoor explorers with one another and having them adventure together, we were also keen on addressing some of the other pain points associated with exploring the outdoors. \n          </p>\n        </TextBlock>\n        <TextBlock>\n          <p>\n          Our previous rounds of research and user tests had given us a fair idea of the issues and annoyances that users were likely to encounter, and they ran the gamut from the planning and preparation before a trip to issues encountered during a trip itself. Some of the pain points we identified included: \n          </p>\n        </TextBlock>\n        <TextBlock>\n          <StyledList>\n            <ListItem>\n              Difficulty in finding information about specific characteristics of outdoor areas such as difficulty levels, distances, elevation, terrain etc.  \n            </ListItem>\n            <ListItem>\n              Difficulty in acquiring localized information on conditions of outdoor areas such as weather forecasts and trail conditions. \n            </ListItem>\n            <ListItem>\n              Lack of knowledge on what to bring and how to prepare for an outdoor adventure, which also relies on the former two factors. \n            </ListItem>\n            <ListItem>\n              Lack of real time information in the outdoors such as present location on a trail.\n            </ListItem>\n          </StyledList>\n        </TextBlock>\n        <TextBlock>\n          <p>\n          With our high fidelity prototype, we attempted to address these pain points by collating all of the appropriate information and presenting it to the user within our app. \n          </p>\n        </TextBlock>\n      </OffsetBody>\n      <ImageWrapper>\n        <Img fluid={data.Home.childImageSharp.fluid}/>\n      </ImageWrapper>\n      <ImageWithMargin>\n        <Img fluid={data.Listing.childImageSharp.fluid} />\n      </ImageWithMargin>\n      <ImageWithMargin>\n        <Img fluid={data.Trips.childImageSharp.fluid} />\n      </ImageWithMargin>\n      <ImageWithMargin>\n        <Img fluid={data.Profile.childImageSharp.fluid} />\n      </ImageWithMargin>\n      <ImageWithMargin>\n        <Img fluid={data.ProfileDetail.childImageSharp.fluid} />\n      </ImageWithMargin>\n      <OffsetBody>\n        <TextBlock>\n          <p>\n          All in all, designing this app was an extremely rewarding experience. As a team, we got to learn first hand the necessity of gathering user feedback before making any major design decisions rather than making assumptions on how a user was expected to behave. Making the assumption that safety would be a big concern would have significantly impacted our design, limiting the vision we strove to achieve. By ensuring that such concerns did not become an issue early on, we were able to learn more about other aspects of the outdoor experience that our users sought. \n          </p>\n        </TextBlock>\n      </OffsetBody>\n      <LeftButton onClick={() => props.onChange(props.active -1)}>\n        <ButtonHeader>PREVIOUS SECTION</ButtonHeader>\n        <ButtonText>{sections[props.active - 1]}</ButtonText>\n      </LeftButton>\n      <RightButton onClick={() => props.onChange(props.active + 1)}>\n        <ButtonHeader>NEXT SECTION</ButtonHeader>\n        <ButtonText>{sections[props.active + 1]}</ButtonText>\n      </RightButton>\n    </Container>\n  )\n}","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport { Container, OffsetBody, TextBlock, RightButton, LeftButton, ButtonHeader, ButtonText, ImageWrapper, TextQuote, sections } from \"../constants\"\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\"\n\nconst ImageWithMargin = styled(ImageWrapper)`\n  margin-top: 3.5rem;\n`\n\nconst ListItem = styled.li`\n  line-height: 1.5;\n  font-weight: 500;\n  margin-bottom: 1rem;  \n`\nconst StyledList = styled.ul`\n  margin: 2.5rem 0;\n\n  @media (max-width: 1240px) {\n    padding-left: 1rem;\n  }\n`;\n\nexport default function Redesign(props) {\nconst data = useStaticQuery(graphql`\n  query {\n    ScreenDeck: file(relativePath: {eq: \"revised-screen-deck.png\"}) {\n      childImageSharp {\n        fluid (maxWidth: 3200) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    TripCrit: file(relativePath: {eq: \"trip-critique.png\"}) {\n      childImageSharp {\n        fluid (maxWidth: 3200) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    RevisedTripCrit: file(relativePath: {eq: \"revised-trip-crit.png\"}) {\n      childImageSharp {\n        fluid (maxWidth: 3200) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    LocationCrit: file(relativePath: {eq: \"location-crit.png\"}) {\n      childImageSharp {\n        fluid (maxWidth: 3200) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    TrailSign: file(relativePath: {eq: \"trail-difficulty.png\"}) {\n      childImageSharp {\n        fluid (maxWidth: 3200) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`)\n\n  return (\n    <Container>\n      <ImageWrapper>\n        <Img fluid={data.ScreenDeck.childImageSharp.fluid} />\n      </ImageWrapper>\n      <OffsetBody>\n        <p><strong>Revisiting the work.</strong></p>\n        <TextBlock>\n          <p>\n          The last round of testing had revealed a number of issues that we never quite had the opportunity to address. Seeing that some time had passed since I worked on this project, I figured it’d be a good idea to come back with fresh eyes and do a little refresh. \n          </p>\n        </TextBlock>\n        <TextBlock>\n          <p>\n          My main goal with this redesign was to address some of the issues that were left unresolved. I also attempted to improve the visual clarity of the design by improving the information hierarchy and by updating the visual styling to better match latest generation mobile hardware.  \n          </p>\n        </TextBlock>\n      </OffsetBody>\n      <ImageWrapper>\n        <Img fluid={data.TripCrit.childImageSharp.fluid} />\n      </ImageWrapper>\n      <ImageWithMargin>\n        <Img fluid={data.RevisedTripCrit.childImageSharp.fluid} />\n      </ImageWithMargin>\n      <OffsetBody>\n        <TextBlock>\n          <p>\n          If you’ve been paying attention you may notice that I’ve omitted the section about car info in the revised design. We had feedback from several of our testers wondering what about the car was important, and I agree with that sentiment. Perhaps I had a different vision of the product from the rest of my team, but my idea of the app was always going to be focused on the people and the outdoors. We weren’t making a ride-sharing app or a product focused around cars, and to have the car info adds limited value at the potential expense of clutter and information overload. \n          </p>\n        </TextBlock>\n        <TextBlock>\n          <p>\n          The original intention of including the car information was due to the accessibility challenges you get in the outdoors, where vehicles may need certain characteristics or specialized equipment to tackle terrain. The idea being that the  vehicle information would give users added confidence or assurance that they’ll get to where they want to go. \n          </p>\n        </TextBlock>\n        <TextQuote>\n          We weren’t making a ride-sharing app or a product focused around cars, and to have the car info adds limited value at the potential expense of clutter and information overload.\n        </TextQuote>\n        <TextBlock>\n          <p>\n          Yet there are a number of reasons why I felt that having car information was ultimately unnecessary. <strong> Most of all being that I find that the actual car is often a poor predictor of ability to tackle conditions and terrain. </strong>\n          For example, I’ve seen more than my fair share of supposedly all-wheel drive vehicles spun out in a ditch on the side of the road because they were running summer tires in the snow or traveling at inappropriate speeds for conditions.\n          </p>\n        </TextBlock>\n        <TextBlock>\n          <p>\n          What I feel matters more is the ability and experience levels of the driver. A good driver should be able to recognize the limitations of his/her vehicle, and either work around it or simply not even attempt to go to places that the car can’t handle.\n          </p>\n        </TextBlock>\n      </OffsetBody>\n      <ImageWrapper>\n        <Img fluid={data.LocationCrit.childImageSharp.fluid} />\n      </ImageWrapper>\n      <ImageWithMargin>\n        <Img fluid={data.TrailSign.childImageSharp.fluid} />\n      </ImageWithMargin>\n      <OffsetBody>\n        <p><strong>A little sidetrack into symbology</strong></p>\n        <TextBlock>\n          <p>\n            Our professor wasn't too keen on the method we were using to denote activity difficulty, specifically our use of green, yellow and red to represent easy, moderate and hard respectively. My goal with the redesign was therefore to move away from the color coding and especially the use of the color red, which was an attention grabber and had too much of a negative connotation attached to it. After a little research, I decided to adopt the trail difficulty symbology system used by the National Ski Area's Association (NSAA).\n          </p>\n        </TextBlock>\n        <TextQuote>\n          The Walt Disney Company was considering opening a ski resort and did studies and tests on which colors worked best. They came up with the current green circle for easiest runs, a blue square for intermediate, black diamond for advanced and double black diamond for expert.\n        </TextQuote>\n        <TextBlock>\n          <p>\n          The NSAA first adopted a system of signage in the winter of 1964-65. Before that, as if skiing on wooden boards with leather boots wasn’t hard enough, it was every man for himself. The colors they used were different than today and also conflicted with the colors used in Europe. American Resorts used yellow to designate intermediate trails and the French used red because, well who knows why—they’re French. \n          </p>\n        </TextBlock>\n        <TextBlock>\n          <p>\n          The Walt Disney Company was considering opening a ski resort and did studies and tests on which colors worked best. They had even tested skier’s reactions to different geometric figures, concluding for example, that the symbol for easy terrain should be a circle, which was perceived as soft, and that the color of the circle should be green, which was perceived as mellow. The current system of a green circle for easiest runs, a blue square for intermediate, black diamond for advanced and double black diamond for expert was thus born. This system was adopted by the NSAA 3 years later in 1968 and has stuck ever since.\n          </p>\n        </TextBlock>\n      </OffsetBody>\n      <LeftButton onClick={() => props.onChange(props.active -1)}>\n        <ButtonHeader>PREVIOUS SECTION</ButtonHeader>\n        <ButtonText>{sections[props.active - 1]}</ButtonText>\n      </LeftButton>\n      <RightButton onClick={() => props.onChange(props.active + 1)}>\n        <ButtonHeader>NEXT SECTION</ButtonHeader>\n        <ButtonText>{sections[props.active + 1]}</ButtonText>\n      </RightButton>\n    </Container>\n  )\n}","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n  max-width: 1440px;\n`;\n\nexport default function PersonalThoughts() {\n  return (\n    <Container>\n      <h1>Hi people</h1>\n      <p>This is the Personal Thoughts component.</p>\n      <p>Now go build something great.</p>\n    </Container>\n  )\n}","import React, {useState, useEffect} from \"react\"\nimport styled from \"styled-components\"\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Nav from \"../components/nav\"\nimport MobileNav from \"../components/mobile-nav\"\nimport Header from \"../components/header\"\n\nimport Showcase from \"../components/nimbus/showcase\"\nimport SurveyIdeation from \"../components/nimbus/survey-ideation\"\nimport Solution from \"../components/nimbus/flows-wireframes\"\nimport HighFidelity from \"../components/nimbus/high-fidelity\"\nimport Redesign from \"../components/nimbus/redesign\"\nimport PersonalThoughts from \"../components/nimbus/personal-thoughts\"\n\nimport { sections } from \"../components/constants\"\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\n\nexport default function Nimbus() { \n  const [active, setActive] = useState(0)\n  const menuState = useSelector(state => state.menuState)\n  const dispatch = useDispatch()\n\n  // useEffect(() => {\n  //   dispatch({type: \"CLOSE\"})\n  // },[])\n\n  function handleTabSwitch(value) {\n    setActive(value);\n  }\n\n  function renderActiveSection() {\n    switch (active) {\n      case 0 : \n        return <Showcase onChange={handleTabSwitch} active={active} />\n      case  1:\n        return <SurveyIdeation onChange={handleTabSwitch} active={active} />\n      case  2:\n        return <Solution onChange={handleTabSwitch} active={active}/>\n      case 3:\n        return <HighFidelity onChange={handleTabSwitch} active={active} />\n      case 4:\n        return <Redesign onChange={handleTabSwitch} active={active} />\n      case 5:\n        return <PersonalThoughts onChange={handleTabSwitch} active={active} />\n      default:\n        return <Showcase onChange={handleTabSwitch} active={active} />\n    }\n  }\n\n  return (\n    <Layout>\n      <SEO title=\"Nimbus\" />\n      <Header pageTitle={\"Nimbus\"} />\n      {\n        menuState ?\n          <MobileNav components={sections} active={active} onChange={handleTabSwitch}/>\n        :\n        <Wrapper>\n            {\n              renderActiveSection()\n            }\n          <Nav components={sections} active={active} onChange={handleTabSwitch}/>\n        </Wrapper>\n      }\n    </Layout>\n  )\n}\n\n\n\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","// import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  // <header\n  //   style={{\n  //     background: `rebeccapurple`,\n  //     marginBottom: `1.45rem`\n  //   }}\n  // >\n  //   <div\n  //     style={{\n  //       margin: `0 auto`,\n  //       maxWidth: 960,\n  //       padding: `1.45rem 1.0875rem`,\n  //     }}\n  //   >\n  //     <h1 style={{ margin: 0 }}>\n  //       <Link\n  //         to=\"/\"\n  //         style={{\n  //           color: `white`,\n  //           textDecoration: `none`,\n  //         }}\n  //       >\n  //         {siteTitle}\n  //       </Link>\n  //     </h1>\n  //   </div>\n  // </header>\n  <></>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport styled from 'styled-components'\n\nimport Header from \"./old-header\"\nimport \"./styles.css\"\n\nconst Container = styled.div`\n  margin: 0 auto;\n  max-width: 1600;\n  padding: 0px 2.5rem 1.45rem;\n\n  @media (max-width: 425px) {\n    padding: 0 1.25rem 1.45rem;\n  }\n`;\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n      {/* <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 1600,\n          padding: `0px 2.5rem 1.45rem`,\n          // paddingTop: '2.5rem',\n        }}\n      > */}\n      <Container>\n        <main>{children}</main>\n        {/* <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer> */}\n      </Container>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport { useSelector, useDispatch } from 'react-redux'\nimport {useTransition, animated} from 'react-spring'\n\nconst Container = styled.div`\n  padding: 1.5rem 0;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst Title = styled.h2`\n  margin: 0;\n  // margin-right: 3.6rem;\n  letter-spacing: -0.3px;\n  font-weight: 700;\n  color: #111111;\n  font-size: 1.4rem;\n\n  @media (max-width: 425px) {\n    font-size: 1.25rem\n  }\n\n  // &:hover {\n  //   color: #a5a5a5;\n  //   font-weight: 800;\n  //   letter-spacing: -0.5px;\n  // }\n`\n\nconst SecondaryTitle = styled(Title)`\n  color: #c5c5c5;\n  // margin: 0;\n  font-weight: 800;\n  letter-spacing: -0.5px;\n  // position: fixed;\n  // left: 10vw;\n`\n\nconst Subtitle = styled.p`\n  font-weight: 300;\n  font-size: 1.2rem;  \n  margin: 0;\n  margin-left: 1.5rem;\n  padding-left: 1.5rem;\n  text-align: bottom;   \n  border-left: 1px solid #767676;\n  color: #333333;\n  // position: absolute;\n  // left: 10vw;\n\n  @media (max-width: 425px) {\n    margin-left: 0.9rem;\n    padding-left: 0.9rem;\n    font-size: 1rem;\n  }\n\n`\nconst Filler = styled.div`\n  // height: 100%;\n  padding-top: 26px;\n`\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  transition: 0.3s;\n`;\n\nconst Menu = styled.a`\n  display: none;\n  margin: 0;\n  letter-spacing: -0.3px;\n  font-weight: 400;\n  color: #111111;\n  font-size: 1.2rem;\n  line-height: 1.5;\n  cursor: pointer;\n\n  @media (max-width: 425px) {\n    font-size: 1rem;\n  }\n\n  @media (max-width: 768px) {\n    display: block;\n  }\n`\n\n\nexport default function Header(props) {\n  // const [title, setTitle] = useState(\"John Lim\")\n  const [hover, setHover] = useState(false)\n  const menuState = useSelector(state => state.menuState)\n  const dispatch = useDispatch()\n\n  const transitions = useTransition(hover, null, {\n    from: { opacity: 0, height: 0},\n    enter: { opacity: 1, height: 0 },\n    leave: { opacity: 0, height: 0 },\n    config: {tension: 200}\n    })\n\n  // useEffect(() => {\n  //   console.log(menuState);\n  // })\n\n  useEffect(() => {\n    dispatch({type: \"CLOSE\"})\n  }, [])\n\n  function triggerMenu() {\n    if (menuState) {\n      dispatch({type: \"CLOSE\"})\n    } else {\n      dispatch({type: \"OPEN\"})\n    }\n  }\n\n  return (\n    <Container>\n      <Wrapper>\n        <StyledLink \n          to=\"/\"\n          onMouseEnter={() => setHover(true)}\n          onMouseLeave={() => setHover(false)}\n        >\n          {/* {\n            hover ?\n            <SecondaryTitle>Make It Better.</SecondaryTitle> :\n            <Title>John Lim</Title>\n          } */}\n          {\n            transitions.map(({item, key, props}) => item ?\n            <animated.div style={props}>\n              <SecondaryTitle>Make It Better.</SecondaryTitle>\n            </animated.div> :\n            <animated.div style={props}>\n              <Title>John Lim</Title>\n            </animated.div>\n            )\n          }\n        </StyledLink>\n        {\n          props.pageTitle ?\n          <>\n            <Subtitle>{props.pageTitle}</Subtitle> \n          </>: <Filler />\n        }\n      </Wrapper>\n      <Menu onClick={() => triggerMenu()}>Menu</Menu>\n    </Container>\n  )\n}","import React, { useState } from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { useDispatch } from 'react-redux'\n\nconst Container = styled.nav`\n  // width: 15em;\n`\n\nconst List = styled.ul`\n  list-style: none;\n  margin-bottom: 3.5rem;\n  text-align: center;\n`\nconst ListItem = styled.li`\n`;\n\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  font-size: 1.1rem;\n  line-height: 1.7;\n\n  :hover {\n    text-decoration: underline;\n  }\n`\n\nconst StyledText = styled.a`\n  line-height: 1.7;\n  color: #111111;\n  margin: 0;\n  font-weight: 500;\n  font-size: 1.1rem;\n\n  :hover {\n    text-decoration: underline;\n    cursor: pointer;  \n  }   \n`\n\nconst GreyText = styled(StyledText)`\n  color: #767676;\n  font-weight: 400;\n`\n\nconst DetailText = styled.p`\n  color: #767676;\n  margin-bottom: 3.5rem;\n  line-height: 1.5;\n\n  @media (max-width: 768px) {\n    display: none\n  }\n\n`\n\nexport default function Nav(props) {\n  const [sections, setSections] = useState(props.components)\n  const dispatch = useDispatch()\n\n  function handleClick(index) {\n    props.onChange(index)\n    dispatch({type: \"CLOSE\"})\n  }\n\n\n  function handleComponents() {\n    if (sections) {\n      return sections.map((section, index) => {\n        if (index === props.active) {\n          return (\n            <ListItem key={index} onClick={() => handleClick(index)}>\n              <StyledText>{sections[index]}</StyledText>\n            </ListItem>\n          )\n        } else {\n          return (\n            <ListItem key={index} onClick={() => handleClick(index)}>\n              <GreyText style={{margin: \"0\", lineHeight: \"1.7\"}}>{sections[index]}</GreyText>\n            </ListItem>\n          )\n        }\n      })\n    }\n  }\n\n  return (\n    <Container>\n      <List>\n        <ListItem>\n          <StyledLink onClick={() => dispatch({type: \"CLOSE\"})} to=\"/\">Home</StyledLink>\n        </ListItem>\n        <ListItem>\n          <StyledLink onClick={() => dispatch({type: \"CLOSE\"})}  to=\"/\">About</StyledLink>\n        </ListItem>\n        <ListItem>\n          <StyledLink onClick={() => dispatch({type: \"CLOSE\"})}  to=\"/\">Resume</StyledLink>\n        </ListItem>\n      </List>\n \n      <List>\n        {\n          handleComponents()\n        }\n      </List>\n    </Container>\n  )\n}"],"sourceRoot":""}